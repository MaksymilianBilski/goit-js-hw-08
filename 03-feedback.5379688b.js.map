{"mappings":"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","sources":["node_modules/i/lib/defaults.js","node_modules/i/lib/util.js","node_modules/i/lib/inflections.js","src/js/03-feedback.js"],"sourcesContent":["// Default inflections\nmodule.exports = function (inflect) {\n  inflect.plural(/$/, 's');\n  inflect.plural(/s$/i, 's');\n  inflect.plural(/(ax|test)is$/i, '$1es');\n  inflect.plural(/(octop|vir)us$/i, '$1i');\n  inflect.plural(/(octop|vir)i$/i, '$1i');\n  inflect.plural(/(alias|status)$/i, '$1es');\n  inflect.plural(/(bu)s$/i, '$1ses');\n  inflect.plural(/(buffal|tomat)o$/i, '$1oes');\n  inflect.plural(/([ti])um$/i, '$1a');\n  inflect.plural(/([ti])a$/i, '$1a');\n  inflect.plural(/sis$/i, 'ses');\n  inflect.plural(/(?:([^fa])fe|(?:(oa)f)|([lr])f)$/i, '$1ves');\n  inflect.plural(/(hive)$/i, '$1s');\n  inflect.plural(/([^aeiouy]|qu)y$/i, '$1ies');\n  inflect.plural(/(x|ch|ss|sh)$/i, '$1es');\n  inflect.plural(/(matr|vert|ind)(?:ix|ex)$/i, '$1ices');\n  inflect.plural(/([m|l])ouse$/i, '$1ice');\n  inflect.plural(/([m|l])ice$/i, '$1ice');\n  inflect.plural(/^(ox)$/i, '$1en');\n  inflect.plural(/^(oxen)$/i, '$1');\n  inflect.plural(/(quiz)$/i, '$1zes');\n\n  inflect.singular(/s$/i, '');\n  inflect.singular(/(n)ews$/i, '$1ews');\n  inflect.singular(/([ti])a$/i, '$1um');\n  inflect.singular(/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$/i, '$1sis');\n  inflect.singular(/(^analy)ses$/i, '$1sis');\n  inflect.singular(/([^f])ves$/i, '$1fe');\n  inflect.singular(/(hive)s$/i, '$1');\n  inflect.singular(/(tive)s$/i, '$1');\n  inflect.singular(/(oave)s$/i, 'oaf');\n  inflect.singular(/([lr])ves$/i, '$1f');\n  inflect.singular(/([^aeiouy]|qu)ies$/i, '$1y');\n  inflect.singular(/(s)eries$/i, '$1eries');\n  inflect.singular(/(m)ovies$/i, '$1ovie');\n  inflect.singular(/(x|ch|ss|sh)es$/i, '$1');\n  inflect.singular(/([m|l])ice$/i, '$1ouse');\n  inflect.singular(/(bus)es$/i, '$1');\n  inflect.singular(/(o)es$/i, '$1');\n  inflect.singular(/(shoe)s$/i, '$1');\n  inflect.singular(/(cris|ax|test)es$/i, '$1is');\n  inflect.singular(/(octop|vir)i$/i, '$1us');\n  inflect.singular(/(alias|status)es$/i, '$1');\n  inflect.singular(/^(ox)en/i, '$1');\n  inflect.singular(/(vert|ind)ices$/i, '$1ex');\n  inflect.singular(/(matr)ices$/i, '$1ix');\n  inflect.singular(/(quiz)zes$/i, '$1');\n  inflect.singular(/(database)s$/i, '$1');\n\n  inflect.irregular('child', 'children');\n  inflect.irregular('person', 'people');\n  inflect.irregular('man', 'men');\n  inflect.irregular('child', 'children');\n  inflect.irregular('sex', 'sexes');\n  inflect.irregular('move', 'moves');\n  inflect.irregular('cow', 'kine');\n  inflect.irregular('zombie', 'zombies');\n  inflect.irregular('oaf', 'oafs', true);\n  inflect.irregular('jefe', 'jefes');\n  inflect.irregular('save', 'saves');\n  inflect.irregular('safe', 'safes');\n  inflect.irregular('fife', 'fifes');\n\n  inflect.uncountable([\n    'equipment',\n    'information',\n    'rice',\n    'money',\n    'species',\n    'series',\n    'fish',\n    'sheep',\n    'jeans',\n    'sushi',\n  ]);\n};\n","// Some utility functions in js\n\nvar u = (module.exports = {\n  array: {\n    // Returns a copy of the array with the value removed once\n    //\n    //     [1, 2, 3, 1].del 1 #=> [2, 3, 1]\n    //     [1, 2, 3].del 4    #=> [1, 2, 3]\n    del: function (arr, val) {\n      var index = arr.indexOf(val);\n\n      if (index != -1) {\n        if (index == 0) {\n          return arr.slice(1);\n        } else {\n          return arr.slice(0, index).concat(arr.slice(index + 1));\n        }\n      } else {\n        return arr;\n      }\n    },\n\n    // Returns the first element of the array\n    //\n    //     [1, 2, 3].first() #=> 1\n    first: function (arr) {\n      return arr[0];\n    },\n\n    // Returns the last element of the array\n    //\n    //     [1, 2, 3].last()  #=> 3\n    last: function (arr) {\n      return arr[arr.length - 1];\n    },\n  },\n  string: {\n    // Returns a copy of str with all occurrences of pattern replaced with either replacement or the return value of a function.\n    // The pattern will typically be a Regexp; if it is a String then no regular expression metacharacters will be interpreted\n    // (that is /\\d/ will match a digit, but ‘\\d’ will match a backslash followed by a ‘d’).\n    //\n    // In the function form, the current match object is passed in as a parameter to the function, and variables such as\n    // $[1], $[2], $[3] (where $ is the match object) will be set appropriately. The value returned by the function will be\n    // substituted for the match on each call.\n    //\n    // The result inherits any tainting in the original string or any supplied replacement string.\n    //\n    //     \"hello\".gsub /[aeiou]/, '*'      #=> \"h*ll*\"\n    //     \"hello\".gsub /[aeiou]/, '<$1>'   #=> \"h<e>ll<o>\"\n    //     \"hello\".gsub /[aeiou]/, ($) {\n    //       \"<#{$[1]}>\"                    #=> \"h<e>ll<o>\"\n    //\n    gsub: function (str, pattern, replacement) {\n      var i, match, matchCmpr, matchCmprPrev, replacementStr, result, self;\n      if (!(pattern != null && replacement != null)) return u.string.value(str);\n      result = '';\n      self = str;\n      while (self.length > 0) {\n        if ((match = self.match(pattern))) {\n          result += self.slice(0, match.index);\n          if (typeof replacement === 'function') {\n            match[1] = match[1] || match[0];\n            result += replacement(match);\n          } else if (replacement.match(/\\$[1-9]/)) {\n            matchCmprPrev = match;\n            matchCmpr = u.array.del(match, void 0);\n            while (matchCmpr !== matchCmprPrev) {\n              matchCmprPrev = matchCmpr;\n              matchCmpr = u.array.del(matchCmpr, void 0);\n            }\n            match[1] = match[1] || match[0];\n            replacementStr = replacement;\n            for (i = 1; i <= 9; i++) {\n              if (matchCmpr[i]) {\n                replacementStr = u.string.gsub(replacementStr, new RegExp('\\\\$' + i), matchCmpr[i]);\n              }\n            }\n            result += replacementStr;\n          } else {\n            result += replacement;\n          }\n          self = self.slice(match.index + match[0].length);\n        } else {\n          result += self;\n          self = '';\n        }\n      }\n      return result;\n    },\n\n    // Returns a copy of the String with the first letter being upper case\n    //\n    //     \"hello\".upcase #=> \"Hello\"\n    upcase: function (str) {\n      var self = u.string.gsub(str, /_([a-z])/, function ($) {\n        return '_' + $[1].toUpperCase();\n      });\n\n      self = u.string.gsub(self, /\\/([a-z])/, function ($) {\n        return '/' + $[1].toUpperCase();\n      });\n\n      return self[0].toUpperCase() + self.substr(1);\n    },\n\n    // Returns a copy of capitalized string\n    //\n    //     \"employee salary\" #=> \"Employee Salary\"\n    capitalize: function (str, spaces) {\n      if (!str.length) {\n        return str;\n      }\n\n      var self = str.toLowerCase();\n\n      if (!spaces) {\n        self = u.string.gsub(self, /\\s([a-z])/, function ($) {\n          return ' ' + $[1].toUpperCase();\n        });\n      }\n\n      return self[0].toUpperCase() + self.substr(1);\n    },\n\n    // Returns a copy of the String with the first letter being lower case\n    //\n    //     \"HELLO\".downcase #=> \"hELLO\"\n    downcase: function (str) {\n      var self = u.string.gsub(str, /_([A-Z])/, function ($) {\n        return '_' + $[1].toLowerCase();\n      });\n\n      self = u.string.gsub(self, /\\/([A-Z])/, function ($) {\n        return '/' + $[1].toLowerCase();\n      });\n\n      return self[0].toLowerCase() + self.substr(1);\n    },\n\n    // Returns a string value for the String object\n    //\n    //     \"hello\".value() #=> \"hello\"\n    value: function (str) {\n      return str.substr(0);\n    },\n  },\n});\n","// A singleton instance of this class is yielded by Inflector.inflections, which can then be used to specify additional\n// inflection rules. Examples:\n//\n//     BulletSupport.Inflector.inflect ($) ->\n//       $.plural /^(ox)$/i, '$1en'\n//       $.singular /^(ox)en/i, '$1'\n//\n//       $.irregular 'octopus', 'octopi'\n//\n//       $.uncountable \"equipment\"\n//\n// New rules are added at the top. So in the example above, the irregular rule for octopus will now be the first of the\n// pluralization and singularization rules that is runs. This guarantees that your rules run before any of the rules that may\n// already have been loaded.\n\nvar util = require('./util');\n\nvar Inflections = function () {\n  this.plurals = [];\n  this.singulars = [];\n  this.uncountables = [];\n  this.humans = [];\n  require('./defaults')(this);\n  return this;\n};\n\n// Specifies a new pluralization rule and its replacement. The rule can either be a string or a regular expression.\n// The replacement should always be a string that may include references to the matched data from the rule.\nInflections.prototype.plural = function (rule, replacement) {\n  if (typeof rule == 'string') {\n    this.uncountables = util.array.del(this.uncountables, rule);\n  }\n  this.uncountables = util.array.del(this.uncountables, replacement);\n  this.plurals.unshift([rule, replacement]);\n};\n\n// Specifies a new singularization rule and its replacement. The rule can either be a string or a regular expression.\n// The replacement should always be a string that may include references to the matched data from the rule.\nInflections.prototype.singular = function (rule, replacement) {\n  if (typeof rule == 'string') {\n    this.uncountables = util.array.del(this.uncountables, rule);\n  }\n  this.uncountables = util.array.del(this.uncountables, replacement);\n  this.singulars.unshift([rule, replacement]);\n};\n\n// Specifies a new irregular that applies to both pluralization and singularization at the same time. This can only be used\n// for strings, not regular expressions. You simply pass the irregular in singular and plural form.\n//\n//     irregular 'octopus', 'octopi'\n//     irregular 'person', 'people'\nInflections.prototype.irregular = function (singular, plural, fullMatchRequired) {\n  this.uncountables = util.array.del(this.uncountables, singular);\n  this.uncountables = util.array.del(this.uncountables, plural);\n  var prefix = '';\n  if (fullMatchRequired) {\n    prefix = '^';\n  }\n  if (singular[0].toUpperCase() == plural[0].toUpperCase()) {\n    this.plural(new RegExp('(' + prefix + singular[0] + ')' + singular.slice(1) + '$', 'i'), '$1' + plural.slice(1));\n    this.plural(new RegExp('(' + prefix + plural[0] + ')' + plural.slice(1) + '$', 'i'), '$1' + plural.slice(1));\n    this.singular(new RegExp('(' + prefix + plural[0] + ')' + plural.slice(1) + '$', 'i'), '$1' + singular.slice(1));\n  } else {\n    this.plural(\n      new RegExp(prefix + singular[0].toUpperCase() + singular.slice(1) + '$'),\n      plural[0].toUpperCase() + plural.slice(1)\n    );\n    this.plural(\n      new RegExp(prefix + singular[0].toLowerCase() + singular.slice(1) + '$'),\n      plural[0].toLowerCase() + plural.slice(1)\n    );\n    this.plural(\n      new RegExp(prefix + plural[0].toUpperCase() + plural.slice(1) + '$'),\n      plural[0].toUpperCase() + plural.slice(1)\n    );\n    this.plural(\n      new RegExp(prefix + plural[0].toLowerCase() + plural.slice(1) + '$'),\n      plural[0].toLowerCase() + plural.slice(1)\n    );\n    this.singular(\n      new RegExp(prefix + plural[0].toUpperCase() + plural.slice(1) + '$'),\n      singular[0].toUpperCase() + singular.slice(1)\n    );\n    this.singular(\n      new RegExp(prefix + plural[0].toLowerCase() + plural.slice(1) + '$'),\n      singular[0].toLowerCase() + singular.slice(1)\n    );\n  }\n};\n\n// Specifies a humanized form of a string by a regular expression rule or by a string mapping.\n// When using a regular expression based replacement, the normal humanize formatting is called after the replacement.\n// When a string is used, the human form should be specified as desired (example: 'The name', not 'the_name')\n//\n//     human /(.*)_cnt$/i, '$1_count'\n//     human \"legacy_col_person_name\", \"Name\"\nInflections.prototype.human = function (rule, replacement) {\n  this.humans.unshift([rule, replacement]);\n};\n\n// Add uncountable words that shouldn't be attempted inflected.\n//\n//     uncountable \"money\"\n//     uncountable [\"money\", \"information\"]\nInflections.prototype.uncountable = function (words) {\n  this.uncountables = this.uncountables.concat(words);\n};\n\n// Clears the loaded inflections within a given scope (default is _'all'_).\n// Give the scope as a symbol of the inflection type, the options are: _'plurals'_,\n// _'singulars'_, _'uncountables'_, _'humans'_.\n//\n//     clear 'all'\n//     clear 'plurals'\nInflections.prototype.clear = function (scope) {\n  if (scope == null) scope = 'all';\n  switch (scope) {\n    case 'all':\n      this.plurals = [];\n      this.singulars = [];\n      this.uncountables = [];\n      this.humans = [];\n    default:\n      this[scope] = [];\n  }\n};\n\n// Clears the loaded inflections and initializes them to [default](../inflections.html)\nInflections.prototype.default = function () {\n  this.plurals = [];\n  this.singulars = [];\n  this.uncountables = [];\n  this.humans = [];\n  require('./defaults')(this);\n  return this;\n};\n\nmodule.exports = new Inflections();\n","const { clear } = require('i/lib/inflections');\n\n// html tags\nconst input = document.querySelector(`input[type=\"email\"]`);\nconst textarea = document.querySelector(`textarea[name=\"message\"]`);\nconst button = document.querySelector(`button[type=\"submit\"]`);\nconst form = document.querySelector('feedback-form');\n// html tags\n\n//object and local storage\nconst obj = {\n  email: '',\n  textarea: '',\n};\nconst load = localStorage.getItem('feedback-form-state');\nconst parsedLoad = JSON.parse(load);\n//object and local storage\n\n//callbacks and listeners for email and  for message\nconst callback1 = () => {\n  obj.email = input.value;\n  localStorage.setItem('feedback-form-state', JSON.stringify(obj));\n};\n\nconst callback2 = () => {\n  obj.textarea = textarea.value;\n  localStorage.setItem('feedback-form-state', JSON.stringify(obj));\n};\ninput.addEventListener('input', callback1);\ntextarea.addEventListener('input', callback2);\n//callbacks and listeners for email and  for message\n\n//submit event\nconst handleSubmit = evt => {\n  evt.preventDefault();\n  if (input.value === '' || textarea.value === '') {\n    return alert('please fill all the fields!');\n  } else if (localStorage.length === 0) {\n    return;\n  } else if (parsedLoad !== '') {\n    obj.email = input.value;\n    obj.textarea = textarea.value;\n    console.log(obj);\n    console.log(localStorage);\n    localStorage.clear();\n  }\n};\nbutton.addEventListener('click', handleSubmit);\n//submit event\n\n//reload page\nconst check = () => {\n  if (localStorage === null) {\n    return;\n  } else if (localStorage.getItem('feedback-form-state') === null) {\n    return;\n  } else if (parsedLoad.email !== null || parsedLoad.textarea !== null) {\n    input.value = parsedLoad.email;\n    textarea.value = parsedLoad.textarea;\n  }\n};\nwindow.addEventListener('load', check);\n//reload page\n"],"names":["module","exports","inflect","plural","singular","irregular","uncountable","$571f7a8d15bd02d6$var$u","$571f7a8d15bd02d6$exports","array","del","arr","val","index","indexOf","slice","concat","first","last","length","string","gsub","str","pattern","replacement","i","match","matchCmpr","matchCmprPrev","replacementStr","result","self","value","RegExp","upcase","$","toUpperCase","substr","capitalize","spaces","toLowerCase","downcase","$4887da342dbf1aed$var$Inflections","this","plurals","singulars","uncountables","humans","parcelRequire","prototype","rule","unshift","fullMatchRequired","prefix","human","words","clear","scope","default","$945622fd0f572e60$var$input","document","querySelector","$945622fd0f572e60$var$textarea","$945622fd0f572e60$var$button","$945622fd0f572e60$var$obj","email","textarea","$945622fd0f572e60$var$load","localStorage","getItem","$945622fd0f572e60$var$parsedLoad","JSON","parse","addEventListener","setItem","stringify","evt","preventDefault","alert","console","log","window"],"version":3,"file":"03-feedback.5379688b.js.map"}